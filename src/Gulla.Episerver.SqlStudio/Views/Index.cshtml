@using System.Web.Mvc.Html
@using EPiServer.Shell.Navigation

@model Gulla.Episerver.SqlStudio.ViewModels.SqlStudioViewModel

<html>
    <head>
        <title>@Model.Query</title>
        <link href="~/App_Themes/Default/Styles/ToolButton.css" type="text/css" rel="stylesheet">       
        
        <style>
            body {
                margin: 0;
                background-color: #FBFBFB
            }
            span.cm-keyword, span.cm-atom, span.cm-builtin {
                text-transform: uppercase;
            }
            .cm-s-colorforth span.cm-atom {
                color: #ffd900 !important;
            }
        </style>
    </head>
    <body>

        @Html.Raw(Html.CreatePlatformNavigationMenu())
        <div id="epi-application" @Html.Raw(Html.ApplyPlatformNavigation())>
            <div class="epi-contentArea" style="padding-top: 1.0em">
            @if (Model.SavedQueries != null && Model.SavedQueries.Any())
                {
                    <div style="margin-left: 30px; margin-bottom: 10px;">

                            @foreach (var category in Model.SavedQueries)
                            {
                                <select style="padding: 5px 2px;">
                                    <option value="">[@category.Name]</option>
                                    @foreach (var query in category.Queries)
                                    {
                                        <option value="@query.Query">@query.Name</option>
                                    }
                                </select>
                            }
                    </div>
                }

                @using (Html.BeginForm())
                {
                    <span class="epi-cmsButton" style="margin-left: 30px; margin-bottom: 10px;">
                        <input type="submit" id="submit" name="Execute" value="Execute query" title="Execute (F5)" class="epi-cmsButton-text epi-cmsButton-tools epi-cmsButton-Check" />
                    </span>
                    <span>
                        @Html.CheckBoxFor(m => m.HideEmptyColumns) <label for="HideEmptyColumns">Hide empty columns</label>
                    </span>

                    <div>
                        <textarea id="query" name="query">@Html.Raw(Model.Query)</textarea>
                    </div>
                }

                @if (Model.SqlResult != null && Model.SqlResult.Any())
                {
                    <div style="padding: 0 30px">
                        <table class="stripe cell-border" id="result" style="font-size: 80%;">
                            <thead>
                                <tr>
                                    @foreach (var headerColumn in Model.SqlResult.First())
                                    {
                                        <th>@headerColumn</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var row in Model.SqlResult.Skip(1))
                                {
                                    <tr>
                                        @foreach (var col in row)
                                        {
                                            <td>@col</td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else if (!string.IsNullOrEmpty(Model.Message))
                {
                    <div style="margin-left: 30px;">
                        <p><em>@Model.Message</em></p>
                    </div>
                }
            </div>
        </div>


        <script src="https://code.jquery.com/jquery-3.6.0.slim.min.js" integrity="sha256-u7e5khyithlIdTpu22PHhENmPcRdFiHRjhAuHcs05RI=" crossorigin="anonymous"></script>

        <link rel="stylesheet" href="/Modules/Gulla.Episerver.SqlStudio/codemirror-5.59.4/lib/codemirror.css">
        <link rel="stylesheet" href="/Modules/Gulla.Episerver.SqlStudio/codemirror-5.59.4/addon/hint/show-hint.css" />
        @if (Model.DarkMode)
        {
            <link rel="stylesheet" href="/Modules/Gulla.Episerver.SqlStudio/codemirror-5.59.4/theme/colorforth.css" />
        }


        @*https://datatables.net/download/*@
        <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/jszip-2.5.0/dt-1.10.24/b-1.7.0/b-colvis-1.7.0/b-html5-1.7.0/b-print-1.7.0/datatables.min.css" />
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
        <script type="text/javascript" src="https://cdn.datatables.net/v/dt/jszip-2.5.0/dt-1.10.24/b-1.7.0/b-colvis-1.7.0/b-html5-1.7.0/b-print-1.7.0/datatables.min.js"></script>

        <link rel="stylesheet" href="/App_Themes/Default/Styles/ToolButton.css" />

        <script src="/Modules/Gulla.Episerver.SqlStudio/codemirror-5.59.4/lib/codemirror.js"></script>
        <script src="/Modules/Gulla.Episerver.SqlStudio/codemirror-5.59.4/addon/edit/matchbrackets.js"></script>
        <script src="/Modules/Gulla.Episerver.SqlStudio/codemirror-5.59.4/addon/edit/closebrackets.js"></script>
        <script src="/Modules/Gulla.Episerver.SqlStudio/codemirror-5.59.4/mode/sql/sql.js"></script>
        <script src="/Modules/Gulla.Episerver.SqlStudio/codemirror-5.59.4/addon/hint/show-hint.js"></script>
        <script src="/Modules/Gulla.Episerver.SqlStudio/codemirror-5.59.4/addon/hint/sql-hint.js"></script>

        <script>
        var darkMode = @Model.DarkMode.ToString().ToLower();

        var editor = CodeMirror.fromTextArea(document.getElementById('query'),
            {
                mode: 'text/x-mssql',
                indentWithTabs: true,
                smartIndent: true,
                lineNumbers: true,
                matchBrackets: true,
                autoCloseBrackets: true,
                autofocus: true,
                theme: darkMode ? "colorforth" : "default",
                extraKeys: { "Ctrl-Space": "autocomplete" },
                hintOptions: {
                    tables: {
                        @Html.Raw(Model.SqlAutoCompleteMetadata)
                    }
                }
            });

        var tableNameMap = {
            @Html.Raw(Model.SqlTableNameMap)
        };

        // List from https://stackoverflow.com/questions/13744176/codemirror-autocomplete-after-any-keyup
        var excludedIntelliSenseTriggerKeys =
        {
            "8": "backspace",
            "9": "tab",
            "13": "enter",
            "16": "shift",
            "17": "ctrl",
            "18": "alt",
            "19": "pause",
            "20": "capslock",
            "27": "escape",
            "33": "pageup",
            "34": "pagedown",
            "35": "end",
            "36": "home",
            "37": "left",
            "38": "up",
            "39": "right",
            "40": "down",
            "45": "insert",
            "46": "delete",
            "91": "left window key",
            "92": "right window key",
            "93": "select",
            "107": "add",
            "109": "subtract",
            "110": "decimal point",
            "111": "divide",
            "112": "f1",
            "113": "f2",
            "114": "f3",
            "115": "f4",
            "116": "f5",
            "117": "f6",
            "118": "f7",
            "119": "f8",
            "120": "f9",
            "121": "f10",
            "122": "f11",
            "123": "f12",
            "144": "numlock",
            "145": "scrolllock",
            "186": "semicolon",
            "187": "equalsign",
            "188": "comma",
            "189": "dash",
            "190": "period",
            "191": "slash",
            "192": "graveaccent",
            "220": "backslash",
            "222": "quote"
        }

        $(window).keydown(function(event){
            if(event.keyCode === 116) { // F5
                event.preventDefault();
                return false;
            }
        });

        editor.on("keyup", function (editor, event) {
            var __Cursor = editor.getDoc().getCursor();
            var __Token = editor.getTokenAt(__Cursor);

            if (@Model.AutoIntelliSense.ToString().ToLower() && !editor.state.completionActive && !excludedIntelliSenseTriggerKeys[(event.keyCode || event.which).toString()]) {
                CodeMirror.showHint(editor, null, { completeSingle: false });
            }

            if (editor.options.hintOptions.tables[tableNameMap[__Token.string.toUpperCase()]]) {
                editor.options.hintOptions.defaultTable = __Token.string;
                console.log("Default table: " + __Token.string);
            }

            if (event.keyCode === 116) { // F5
                $("#submit").click();
            }
        });

        $(document).ready(function() {
            $('#result').DataTable({
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'colvis',
                        collectionLayout: 'fixed two-column'
                    },
                    'csv', 'pdf', 'excel'
                ]
            });
        });

        $('select').on('change',
            function(e) {
                editor.getDoc().setValue(this.value);
                this.selectedIndex = 0;
                editor.focus();
                editor.setCursor(editor.lineCount(), 0);
            });
        </script>

    </body>
</html>