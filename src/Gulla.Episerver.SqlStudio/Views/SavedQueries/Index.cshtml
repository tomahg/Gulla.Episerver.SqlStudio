@using EPiServer.Shell.Navigation
@using Gulla.Episerver.SqlStudio.Dds

@model Gulla.Episerver.SqlStudio.ViewModels.SavedQueriesViewModel

@{
    Layout = null;
}

<html>
<head>
    <title>SqlStudio Saved Queries</title>

    <style>
        body {
            margin: 0;
            background-color: #FBFBFB
        }

        .inputcontainer select, .inputcontainer input {
            padding: 5px 2px;
        }

        .category {
            margin: 20px 0 10px 30px;
        }

        .queries {
            margin-left: 30px;
            background: #fff;
            border: 1px solid #e5e5e5;
            border-radius: 6px;
            overflow: hidden;
        }

        .query-row {
            border-bottom: 1px solid #f0f0f0;
        }

        .query-row:last-child {
            border-bottom: none;
        }

        .query-head {
            display: grid;
            grid-template-columns: 1fr auto;
            align-items: center;
            gap: 12px;
            padding: 10px 14px;
        }

        .query-editor {
            width: 100%;
            min-height: 180px;
            padding: 8px;
            border: 1px solid #eee;
            border-radius: 4px;
            background: #fff;
            font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
            font-size: 12px;
            white-space: pre;
            overflow: auto;
            box-sizing: border-box;
            margin-top: 6px;
        }

        .accordion-trigger {
            appearance: none;
            background: none;
            border: 0;
            padding: 0;
            margin: 0;
            text-align: left;
            font: inherit;
            font-weight: 600;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .chev {
            width: 24px;
            height: 24px;
            flex: 0 0 24px;
            display: inline-block;
            transition: transform .15s ease;
        }

        .chev svg {
            width: 100%;
            height: 100%;
            display: block;
        }

        .chev svg path {
            fill: currentColor;
        }

        .accordion-trigger[aria-expanded="true"] .chev {
            transform: rotate(90deg);
        }

        .delete-form {
            display: inline-flex;
            align-items: center;
        }

        .btn {
            padding: 0px 10px;
            border-radius: 4px;
            border: 1px solid transparent;
            cursor: pointer;
            font-size: 12px;
            height: 30px;
        }

        .btn-default {
            background: #f3f3f3;
            border-color: #e5e5e5;
        }

        .btn-default:hover {
            background: #ebebeb;
        }

        .btn-primary {
            background: #2563eb;
            color: #fff;
            border-color: #1d4ed8;
        }

        .btn-primary:hover {
            background: #1d4ed8;
        }

        .btn-secondary {
            background: #fff;
            border-color: #cbd5e1;
        }

        .btn-secondary:hover {
            background: #f8fafc;
        }

        .btn-danger {
            background: #c62828;
            color: #fff;
            border-color: #b71c1c;
        }

        .btn-danger:hover {
            background: #b71c1c;
        }

        .accordion-panel {
            padding: 12px 14px 14px 14px;
            border-top: 1px solid #f0f0f0;
        }

        .panel-actions {
            display: flex;
            justify-content: flex-start;
            gap: 8px;
            margin-top: 6px;
            padding-top: 6px;
        }

        .query-sql {
            margin: 0;
            white-space: pre-wrap;
            font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
            font-size: 12px;
            background: #fafafa;
            border: 1px solid #eee;
            border-radius: 4px;
            padding: 8px;
        }

        .muted {
            color: #777;
        }
    </style>
</head>
<body>

    @Html.Raw(Html.CreatePlatformNavigationMenu())
    <div id="epi-application" @Html.Raw(Html.ApplyPlatformNavigation())>
        <div class="epi-contentArea">
            <div class="inputcontainer" style="margin-left: 30px; margin-bottom: 20px; margin-top: 20px; margin-right: 20px">
                <h4 style="margin-bottom: 5px">Saved Queries</h4>

                @if (Model?.SavedQueries != null && Model.SavedQueries.Any())
                {
                    foreach (var category in Model.SavedQueries)
                    {
                        <div class="category">
                            <h5>@(string.IsNullOrWhiteSpace(category.Name) ? "Uncategorized" : category.Name)</h5>
                        </div>

                        if (category.Queries != null && category.Queries.Any())
                        {
                            <div class="queries">
                                @foreach (var query in category.Queries)
                                {
                                    var itemId = "q_" + System.Guid.NewGuid().ToString("N");

                                    <div class="query-row">
                                        <div class="query-head">
                                            <button type="button" class="accordion-trigger" aria-expanded="false" aria-controls="@itemId">
                                                <span class="chev" aria-hidden="true">
                                                    <svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" focusable="false">
                                                        <path d="M7 5l6 5-6 5V5z" />
                                                    </svg>
                                                </span>
                                                @query.Name
                                            </button>
                                        </div>

                                        <div id="@itemId" class="accordion-panel" data-name="@query.Name" data-category="@category.Name"
                                             hidden>
                                            <pre class="query-sql">@query.Query</pre>
                                            <textarea class="query-editor" hidden></textarea>
                                            <div class="panel-actions">
                                                <button type="button" class="btn btn-default edit-btn">Edit</button>

                                                <div class="edit-actions" hidden>
                                                    <button type="button" class="btn btn-primary save-edit">Save</button>
                                                    <button type="button" class="btn btn-secondary cancel-edit">Cancel</button>
                                                </div>
                                                <form action="@Url.Action("Delete", "SavedQueries")" method="post" class="delete-form" onsubmit="return confirm('Delete the query &quot;@query.Name&quot; from &quot;@category.Name&quot;?');">
                                                    <input type="hidden" name="category" value="@category.Name" />
                                                    <input type="hidden" name="name" value="@query.Name" />
                                                    <button type="submit" class="btn btn-danger" title="Delete this query">Delete</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div style="margin-left: 30px;">
                                <p class="muted"><em>No queries in this category.</em></p>
                            </div>
                        }
                    }
                }
                else
                {
                    <div style="margin-left: 30px;">
                        <p><em>No saved queries found.</em></p>
                    </div>
                }
            </div>
        </div>
    </div>

    <script>
        (function () {
            function toggle(panel, trigger) {
                var isHidden = panel.hasAttribute('hidden');
                if (isHidden) {
                    panel.removeAttribute('hidden');
                    trigger.setAttribute('aria-expanded', 'true');
                } else {
                    panel.setAttribute('hidden', '');
                    trigger.setAttribute('aria-expanded', 'false');
                }
            }

            document.addEventListener('click', function (e) {
                var t = e.target;
                if (t && t.classList && t.classList.contains('accordion-trigger')) {
                    var id = t.getAttribute('aria-controls');
                    var panel = document.getElementById(id);
                    if (panel) {
                        toggle(panel, t);
                    }
                }
            }, false);
        })();
    </script>

    <script>
        (function () {
            var updateUrl = '@Url.Action("Update", "SavedQueries")';

            function enterEdit(panel) {
                var pre = panel.querySelector('.query-sql');
                var ta = panel.querySelector('.query-editor');
                var editBtn = panel.querySelector('.edit-btn');
                var editActions = panel.querySelector('.edit-actions');
                var deleteForm = panel.querySelector('.delete-form');

                ta.value = pre.textContent;
                pre.hidden = true;
                ta.hidden = false;
                editBtn.hidden = true;
                editActions.hidden = false;
                if (deleteForm) deleteForm.hidden = true; // reduce accidents while editing
            }

            function exitEdit(panel, keepChanges) {
                var pre = panel.querySelector('.query-sql');
                var ta = panel.querySelector('.query-editor');
                var editBtn = panel.querySelector('.edit-btn');
                var editActions = panel.querySelector('.edit-actions');
                var deleteForm = panel.querySelector('.delete-form');

                if (keepChanges) {
                    pre.textContent = ta.value;
                }
                ta.hidden = true;
                pre.hidden = false;
                editBtn.hidden = false;
                editActions.hidden = true;
                if (deleteForm) deleteForm.hidden = false;
            }

            async function save(panel) {
                var name = panel.getAttribute('data-name') || '';
                var category = panel.getAttribute('data-category') || '';
                var sql = panel.querySelector('.query-editor').value || '';

                var fd = new FormData();
                fd.append('name', name);
                fd.append('category', category);
                fd.append('query', sql);

                var btns = panel.querySelectorAll('.save-edit, .cancel-edit, .edit-btn');
                btns.forEach(b => b.disabled = true);

                try {
                    var resp = await fetch(updateUrl, {
                        method: 'POST',
                        body: fd,
                        credentials: 'same-origin'
                    });
                    if (!resp.ok) throw new Error('HTTP ' + resp.status);
                    var data = await resp.json();
                    if (!data || !data.ok) throw new Error('Save failed.');
                    exitEdit(panel, /*keepChanges*/true);
                } catch (err) {
                    alert('Could not save changes: ' + err.message);
                } finally {
                    btns.forEach(b => b.disabled = false);
                }
            }

            document.addEventListener('click', function (e) {
                var btn = e.target.closest('button');
                if (!btn) return;

                // Only handle buttons inside an accordion panel
                var panel = btn.closest('.accordion-panel');
                if (!panel) return;

                if (btn.classList.contains('edit-btn')) {
                    e.preventDefault();
                    enterEdit(panel);
                } else if (btn.classList.contains('cancel-edit')) {
                    e.preventDefault();
                    exitEdit(panel, /*keepChanges*/false);
                } else if (btn.classList.contains('save-edit')) {
                    e.preventDefault();
                    save(panel);
                }
            }, false);
        })();
    </script>

</body>
</html>